def ExecuteJob(BRANCH_NAME,TEST_PLAN_NAME,NODE_NAME,TARGET_SUMMIT_ENV,RUN_MODE,ENABLE_SCREENSHOT,PUBLISH_REPORT_DIR,REPORT_SHARE,DATA_SHARE,PUBLISH_DATA_DIR,RETRY_ENABLE,VIDEO_RECORDING){
    echo "Executing Job For Plan --- ${TEST_PLAN_NAME}"
    build  propagate: false,job: 'Test_Plan_Launcher', parameters: [gitParameter(name: 'BRANCH_NAME', value: "${BRANCH_NAME}"), string(name: 'TEST_PLAN_NAME', value: "${TEST_PLAN_NAME}"),string (name: 'NODE_NAME', value: "${NODE_NAME}"), string(name: 'TARGET_SUMMIT_ENV', value: "${TARGET_SUMMIT_ENV}"),  string(name: 'RUN_MODE', value: "${RUN_MODE}"), string(name: 'ENABLE_SCREENSHOT', value: "${ENABLE_SCREENSHOT}"),  string(name: 'PUBLISH_REPORT_DIR', value: "${PUBLISH_REPORT_DIR}") , booleanParam(name: 'REPORT_SHARE', value: "${REPORT_SHARE}"), booleanParam(name: 'DATA_SHARE', value: "${DATA_SHARE}"), string(name: 'PUBLISH_DATA_DIR', value: "${PUBLISH_DATA_DIR}"), booleanParam(name: 'RETRY_ENABLE', value: "${RETRY_ENABLE}"), booleanParam(name: 'VIDEO_RECORDING', value: "${VIDEO_RECORDING}")]
}

def JBOSSRestart(JBOSS_HOST, JBOSS_INSTANCE ){
    echo "JBOSS Restarting for -- ${JBOSS_HOST} and ${JBOSS_INSTANCE}"
    build  propagate: false, job: 'REBOOT_JBOSS', parameters: [string(name: 'JBOSS_HOST', value: "${JBOSS_HOST}"), string(name: 'JBOSS_INSTANCE', value: "${JBOSS_INSTANCE}")]
}

def CDBPDBReboot(DB_HOST, CDBNAME, PDBNAME, SERVICE_NAME ){
    echo "CDBPDBReboot for ${DB_HOST} --- ${CDBNAME} --- ${PDBNAME} --- ${SERVICE_NAME}"
    build job: 'CDB_PDB_REBOOT', parameters: [string(name: 'DB_HOST', value: "${DB_HOST}"), string(name: 'CDBNAME', value: "${CDBNAME}"), string(name: 'PDBNAME', value: "${PDBNAME}"),string(name: 'SERVICE_NAME', value: "${SERVICE_NAME}")]
}

def CDBPDBClone(SRC_DB_HOSTNAME, SRC_CDBNAME, SRC_PDBNAME, TARGET_DB_HOSTNAME, TARGET_CDBNAME, TARGET_PDBNAME, TARGET_OFM_HOSTNAME, LISA_AUTOMATION_SETUP, EQUIFAX_AUTOMATION_SETUP, EID_AUTOMATION_SETUP, HOPEWISER_AUTOMATION_SETUP, EXTERNAL_AFFORD_SETUP, QUEST_SETUP, AWE_SETUP, VIEW_DOCUMENT_SETUP){
    echo "CDBPDBCLONE_ERM in Target --- ${TARGET_DB_HOSTNAME}- --- ${TARGET_CDBNAME} --- ${TARGET_PDBNAME} --- ${TARGET_OFM_HOSTNAME}"
    build job: 'CDBPDBCLONE_ERM', parameters: [string(name: 'SRC_DB_HOSTNAME', value: "${SRC_DB_HOSTNAME}"),        string(name: 'SRC_CDBNAME', value: "${SRC_CDBNAME}"),   string(name: 'SRC_PDBNAME', value: "${SRC_PDBNAME}"),   string(name: 'TARGET_DB_HOSTNAME', value: "${TARGET_DB_HOSTNAME}"),         string(name: 'TARGET_CDBNAME', value: "${TARGET_CDBNAME}"), string(name: 'TARGET_PDBNAME', value: "${TARGET_PDBNAME}"), string(name: 'TARGET_OFM_HOSTNAME', value: "${TARGET_OFM_HOSTNAME}")]
    build propagate: false,job: 'CICD_TestCase', parameters: [gitParameter(name: 'BRANCH_NAME', value: 'origin/Dev_Phase1'), string(name: 'NODE_NAME', value: "AUT09_MSS-ATEST06"), string(name: 'TEST_SCRIPT_NAME', value: 'LISA_Automation.xlsx'), string(name: 'RUN_MODE', value: '3'), string(name: 'TARGET_SUMMIT_ENV', value: "${TARGET_PDBNAME}"), string(name: 'CAPTURE_SCREENSHOTS', value: 'Y'), booleanParam(name: 'RETRY_ENABLE', value: true), booleanParam(name: 'VIDEO_RECORDING', value: false), booleanParam(name: 'LISA_AUTOMATION_SETUP', value: "${LISA_AUTOMATION_SETUP}"), booleanParam(name: 'EQUIFAX_AUTOMATION_SETUP', value: "${EQUIFAX_AUTOMATION_SETUP}"), booleanParam(name: 'EID_AUTOMATION_SETUP', value: "${EID_AUTOMATION_SETUP}"), booleanParam(name: 'HOPEWISER_AUTOMATION_SETUP', value: "${HOPEWISER_AUTOMATION_SETUP}"), booleanParam(name: 'EXTERNAL_AFFORD_SETUP', value: "${EXTERNAL_AFFORD_SETUP}"), booleanParam(name: 'QUEST_SETUP', value: "${QUEST_SETUP}"), booleanParam(name: 'AWE_SETUP', value: "${AWE_SETUP}"), booleanParam(name: 'VIEW_DOCUMENT_SETUP', value: "${VIEW_DOCUMENT_SETUP}")]
    
}


pipeline {
    agent none
    environment {
        PUBLISH_REPORT_DIR = "\\\\swinmssauto09.noid.in.ssg\\D\$\\Startup\\Jenkin_Shared_Report\\${env.BUILD_TAG}"
        PUBLISH_DATA_DIR = "\\\\swinmssauto09.noid.in.ssg\\D\$\\Startup\\Jenkin_Shared_Data\\${env.BUILD_TAG}"
    }
    parameters {
      string defaultValue: 'origin/Dev_Phase1', name: 'BRANCH_NAME', trim: true
      string defaultValue: 'dlnxmssfobug02.noid.in.sopra', name: 'TARGET_DB_OFM_HOST', trim: true
      string defaultValue: 'MRHAUT10', name: 'SRC_DB_CDB', trim: true
      string defaultValue: 'MRHAUT10', name: 'SRC_DB_INSTANCE', trim: true
      string defaultValue: 'dlnxmssautodb02.noid.in.ssg' , name: 'SRC_DB_HOST', trim: true


      string defaultValue: 'CDBATQ4', name: 'TARGET_SUMMIT_CDB_1', trim: true
      string defaultValue: 'MRHNAUT0', name: 'TARGET_SUMMIT_ENV_1', trim: true
      string defaultValue: 'dlnxmssautodb02.noid.in.ssg', name: 'TARGET_SUMMIT_HOST_1', trim: true

      string defaultValue: 'CDBATQ4', name: 'TARGET_SUMMIT_CDB_2', trim: true
      string defaultValue: 'MRHNAUT0', name: 'TARGET_SUMMIT_ENV_2', trim: true
      string defaultValue: 'dlnxmssautodb02.noid.in.ssg', name: 'TARGET_SUMMIT_HOST_2', trim: true

      string defaultValue: 'CDBATQ4', name: 'TARGET_SUMMIT_CDB_3', trim: true
      string defaultValue: 'MRHNAUT0', name: 'TARGET_SUMMIT_ENV_3', trim: true
      string defaultValue: 'dlnxmssautodb02.noid.in.ssg', name: 'TARGET_SUMMIT_HOST_3', trim: true

      string defaultValue: 'CDBATQ4', name: 'TARGET_SUMMIT_CDB_4', trim: true
      string defaultValue: 'MRHNAUT0', name: 'TARGET_SUMMIT_ENV_4', trim: true
      string defaultValue: 'dlnxmssautodb02.noid.in.ssg', name: 'TARGET_SUMMIT_HOST_4', trim: true

      string defaultValue: 'CDBATQ4', name: 'TARGET_SUMMIT_CDB_5', trim: true
      string defaultValue: 'MRHNAUT0', name: 'TARGET_SUMMIT_ENV_5', trim: true
      string defaultValue: 'dlnxmssautodb02.noid.in.ssg', name: 'TARGET_SUMMIT_HOST_5', trim: true

      string defaultValue: 'CDBATQ4', name: 'TARGET_SUMMIT_CDB_6', trim: true
      string defaultValue: 'MRHNAUT0', name: 'TARGET_SUMMIT_ENV_6', trim: true
      string defaultValue: 'dlnxmssautodb02.noid.in.ssg', name: 'TARGET_SUMMIT_HOST_6', trim: true

      string defaultValue: 'CDBATQ4', name: 'TARGET_SUMMIT_CDB_7', trim: true
      string defaultValue: 'MRHNAUT0', name: 'TARGET_SUMMIT_ENV_7', trim: true
      string defaultValue: 'dlnxmssautodb02.noid.in.ssg', name: 'TARGET_SUMMIT_HOST_7', trim: true

      string defaultValue: 'CDBATQ4', name: 'TARGET_SUMMIT_CDB_8', trim: true
      string defaultValue: 'MRHNAUT0', name: 'TARGET_SUMMIT_ENV_8', trim: true
      string defaultValue: 'dlnxmssautodb02.noid.in.ssg', name: 'TARGET_SUMMIT_HOST_8', trim: true

      choice choices: ['N', 'Y'], name: 'ENABLE_SCREENSHOT'
      string defaultValue: 'manoj.agnihotri@soprabanking.com' , name: 'report_email_to', trim: true
      string defaultValue: 'Others_Sequential_TestPlan' , name: 'report_subject_title', trim: true
      string defaultValue: 'FullOthers_Sequential_1_1.csv' , name: 'PARA_P1', trim: true
      string defaultValue: 'FullOthers_Sequential_1_2.csv' , name: 'PARA_P2', trim: true
      string defaultValue: 'FullOthers_Sequential_1_3.csv' , name: 'PARA_P3', trim: true
      string defaultValue: 'FullOthers_Sequential_1_4.csv' , name: 'PARA_P4', trim: true
      string defaultValue: 'FullOthers_Sequential_1_5.csv' , name: 'PARA_P5', trim: true
      string defaultValue: 'FullOthers_Sequential_1_6.csv' , name: 'PARA_P6', trim: true
      string defaultValue: 'FullOthers_Sequential_2_1.csv' , name: 'PARA_P7', trim: true
      string defaultValue: 'FullOthers_Sequential_2_2.csv' , name: 'PARA_P8', trim: true
	  string defaultValue: '2' , name: 'RUN_MODE', trim: true
      booleanParam(name: 'STAGE_SKIP_DB_RESTORE', defaultValue: false, description: 'Skip Database Restore Stage')

    }
    stages {
        stage('Report Cleanup') {
            agent { label 'mss_auto_service' }
            steps {
                JBOSSRestart('dlnxmss5eap01.noid.in.ssg','EC10')
                JBOSSRestart('dlnxmss5eap01.noid.in.ssg','EC11')
                JBOSSRestart('dlnxmss5eap01.noid.in.ssg','EC12')
                JBOSSRestart('dlnxmss5eap01.noid.in.ssg','EC13')
                JBOSSRestart('dlnxmss5eap01.noid.in.ssg','EC17')
                JBOSSRestart('dlnxmss5eap01.noid.in.ssg','EC18')
                JBOSSRestart('dlnxmss5eap01.noid.in.ssg','EC19')
                JBOSSRestart('dlnxmss56eap01.noid.in.ssg','EC13')
                echo "JBOSS Server restarted"
            }
        }

        stage('DB-Restore-Before-RegressTesting') {
            when {
                expression { ! params.STAGE_SKIP_DB_RESTORE }
            }
            steps {
                echo "Step for Database Restore"
                CDBPDBReboot(params.SRC_DB_HOST,params.SRC_DB_CDB,params.SRC_DB_INSTANCE,'PDB')
            }
        }
        stage('Run in Parallel') {
            parallel {
                stage('TARGET_SUMMIT_ENV_1') {
                    steps {
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_1,params.TARGET_SUMMIT_CDB_1,params.TARGET_SUMMIT_ENV_1,'PDB')
                        CDBPDBClone(params.SRC_DB_HOST, params.SRC_DB_CDB, params.SRC_DB_INSTANCE, params.TARGET_SUMMIT_HOST_1, params.TARGET_SUMMIT_CDB_1, params.TARGET_SUMMIT_ENV_1, params.TARGET_DB_OFM_HOST,'true','true','true','true','true','true','true','true')
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_1,params.TARGET_SUMMIT_CDB_1,params.TARGET_SUMMIT_ENV_1,'TMD')
                       ExecuteJob(params.BRANCH_NAME,params.PARA_P1,'AUT09_MSS-ATEST00',params.TARGET_SUMMIT_ENV_1,params.RUN_MODE,params.ENABLE_SCREENSHOT,env.PUBLISH_REPORT_DIR,'true','false',env.PUBLISH_DATA_DIR,'false','true')
                    }

                }
                stage('TARGET_SUMMIT_ENV_2') {
                    steps {
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_2,params.TARGET_SUMMIT_CDB_2,params.TARGET_SUMMIT_ENV_2,'PDB')
                        CDBPDBClone(params.SRC_DB_HOST, params.SRC_DB_CDB, params.SRC_DB_INSTANCE, params.TARGET_SUMMIT_HOST_2, params.TARGET_SUMMIT_CDB_2, params.TARGET_SUMMIT_ENV_2, params.TARGET_DB_OFM_HOST,'true','true','true','true','true','true','true','true')
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_2,params.TARGET_SUMMIT_CDB_2,params.TARGET_SUMMIT_ENV_2,'TMD')
                        ExecuteJob(params.BRANCH_NAME,params.PARA_P2,'AUT09_MSS-ATEST01',params.TARGET_SUMMIT_ENV_2,params.RUN_MODE,params.ENABLE_SCREENSHOT,env.PUBLISH_REPORT_DIR,'true','false',env.PUBLISH_DATA_DIR,'false','false')
                    }
                }
                stage('TARGET_SUMMIT_ENV_3') {
                    steps {
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_3,params.TARGET_SUMMIT_CDB_3,params.TARGET_SUMMIT_ENV_3,'PDB')\
                        CDBPDBClone(params.SRC_DB_HOST, params.SRC_DB_CDB, params.SRC_DB_INSTANCE, params.TARGET_SUMMIT_HOST_3, params.TARGET_SUMMIT_CDB_3, params.TARGET_SUMMIT_ENV_3, params.TARGET_DB_OFM_HOST,'true','true','true','true','true','true','true','true')
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_3,params.TARGET_SUMMIT_CDB_3,params.TARGET_SUMMIT_ENV_3,'TMD')
                        ExecuteJob(params.BRANCH_NAME,params.PARA_P3,'AUT09_MSS-ATEST02',params.TARGET_SUMMIT_ENV_3,params.RUN_MODE,params.ENABLE_SCREENSHOT,env.PUBLISH_REPORT_DIR,'true','false',env.PUBLISH_DATA_DIR,'false','true')
                    }
                }
                stage('TARGET_SUMMIT_ENV_4') {
                    steps {
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_4,params.TARGET_SUMMIT_CDB_4,params.TARGET_SUMMIT_ENV_4,'PDB')
                        CDBPDBClone(params.SRC_DB_HOST, params.SRC_DB_CDB, params.SRC_DB_INSTANCE, params.TARGET_SUMMIT_HOST_4, params.TARGET_SUMMIT_CDB_4, params.TARGET_SUMMIT_ENV_4, params.TARGET_DB_OFM_HOST,'true','true','true','true','true','true','true','true')
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_4,params.TARGET_SUMMIT_CDB_4,params.TARGET_SUMMIT_ENV_4,'TMD')
                        ExecuteJob(params.BRANCH_NAME,params.PARA_P4,'AUT14_MSS-ATEST00',params.TARGET_SUMMIT_ENV_4,params.RUN_MODE,params.ENABLE_SCREENSHOT,env.PUBLISH_REPORT_DIR,'true','false',env.PUBLISH_DATA_DIR,'false','true')
                    }
                }
                stage('TARGET_SUMMIT_ENV_5') {
                    steps {
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_5,params.TARGET_SUMMIT_CDB_5,params.TARGET_SUMMIT_ENV_5,'PDB')
                        CDBPDBClone(params.SRC_DB_HOST, params.SRC_DB_CDB, params.SRC_DB_INSTANCE, params.TARGET_SUMMIT_HOST_5, params.TARGET_SUMMIT_CDB_5, params.TARGET_SUMMIT_ENV_5, params.TARGET_DB_OFM_HOST,'true','true','true','true','true','true','true','true')
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_5,params.TARGET_SUMMIT_CDB_5,params.TARGET_SUMMIT_ENV_5,'TMD')
                        ExecuteJob(params.BRANCH_NAME,params.PARA_P5,'AUT14_MSS-ATEST01',params.TARGET_SUMMIT_ENV_5,params.RUN_MODE,params.ENABLE_SCREENSHOT,env.PUBLISH_REPORT_DIR,'true','false',env.PUBLISH_DATA_DIR,'false','false')
                    }
                }
                stage('TARGET_SUMMIT_ENV_6') {
                    steps {
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_6,params.TARGET_SUMMIT_CDB_6,params.TARGET_SUMMIT_ENV_6,'PDB')
                        CDBPDBClone(params.SRC_DB_HOST, params.SRC_DB_CDB, params.SRC_DB_INSTANCE, params.TARGET_SUMMIT_HOST_6, params.TARGET_SUMMIT_CDB_6, params.TARGET_SUMMIT_ENV_6, params.TARGET_DB_OFM_HOST,'true','true','true','true','true','true','true','true')
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_6,params.TARGET_SUMMIT_CDB_6,params.TARGET_SUMMIT_ENV_6,'TMD')
                        ExecuteJob(params.BRANCH_NAME,params.PARA_P6,'AUT14_MSS-ATEST02',params.TARGET_SUMMIT_ENV_7,params.RUN_MODE,params.ENABLE_SCREENSHOT,env.PUBLISH_REPORT_DIR,'true','false',env.PUBLISH_DATA_DIR,'false','false')
                    }
                }
                stage('TARGET_SUMMIT_ENV_7') {
                    steps {
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_7,params.TARGET_SUMMIT_CDB_7,params.TARGET_SUMMIT_ENV_7,'PDB')
                        CDBPDBClone(params.SRC_DB_HOST, params.SRC_DB_CDB, params.SRC_DB_INSTANCE, params.TARGET_SUMMIT_HOST_7, params.TARGET_SUMMIT_CDB_7, params.TARGET_SUMMIT_ENV_7, params.TARGET_DB_OFM_HOST,'true','true','true','true','true','true','true','true')
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_7,params.TARGET_SUMMIT_CDB_7,params.TARGET_SUMMIT_ENV_7,'TMD')
                        ExecuteJob(params.BRANCH_NAME,params.PARA_P7,'AUT15_MSS-ATEST00',params.TARGET_SUMMIT_ENV_8,params.RUN_MODE,params.ENABLE_SCREENSHOT,env.PUBLISH_REPORT_DIR,'true','false',env.PUBLISH_DATA_DIR,'false','false')
                    }
                }
                stage('TARGET_SUMMIT_ENV_8') {
                    steps {
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_8,params.TARGET_SUMMIT_CDB_8,params.TARGET_SUMMIT_ENV_8,'PDB')
                        CDBPDBClone(params.SRC_DB_HOST, params.SRC_DB_CDB, params.SRC_DB_INSTANCE, params.TARGET_SUMMIT_HOST_8, params.TARGET_SUMMIT_CDB_8, params.TARGET_SUMMIT_ENV_8, params.TARGET_DB_OFM_HOST,'true','true','true','true','true','true','true','true')
                        CDBPDBReboot(params.TARGET_SUMMIT_HOST_8,params.TARGET_SUMMIT_CDB_8,params.TARGET_SUMMIT_ENV_8,'TMD')
                        ExecuteJob(params.BRANCH_NAME,params.PARA_P8,'AUT15_MSS-ATEST01',params.TARGET_SUMMIT_ENV_8,params.RUN_MODE,params.ENABLE_SCREENSHOT,env.PUBLISH_REPORT_DIR,'true','false',env.PUBLISH_DATA_DIR,'false','false')
                    }
                }
              }//end parallel
            }//end parallel-stage
    }//End Stages
    post {
            always {
                build job: 'ReportGenerate', parameters: [string(name: 'report_recipents', value: "$report_email_to"), string(name: 'QUICK_DISPLAY_URL', value: "${env.BUILD_URL}"), string(name: 'email_subject_title', value: "$report_subject_title"), string(name: 'PUBLISH_REPORT_DIR', value: "${PUBLISH_REPORT_DIR}")]
            }
    }
}